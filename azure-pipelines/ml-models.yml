# Azure Pipeline for ML Models
# Train, evaluate, and deploy machine learning models

trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - 'repositories/ml-models/**'

pool:
  vmImage: 'ubuntu-22.04'

variables:
  PYTHON_VERSION: '3.12'
  CUDA_VERSION: '12.3'
  pip_cache_dir: $(Pipeline.Workspace)/.pip

stages:
- stage: Validate
  displayName: 'Validate Models'
  jobs:
  - job: ValidateCode
    displayName: 'Code Quality Checks'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(PYTHON_VERSION)
        addToPath: true
        architecture: 'x64'
      displayName: 'Use Python $(PYTHON_VERSION)'
      retryCountOnTaskFailure: 2

    - task: Cache@2
      inputs:
        key: 'python | "$(Agent.OS)" | repositories/ml-models/requirements-dev.txt'
        restoreKeys: |
          python | "$(Agent.OS)"
          python
        path: $(pip_cache_dir)
      displayName: 'Cache pip dependencies'
      condition: succeeded()
      
    - script: |
        cd repositories/ml-models
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
      displayName: 'Install dependencies'
      retryCountOnTaskFailure: 2

    - script: |
        cd repositories/ml-models
        python -m black --check src/
        python -m flake8 src/
      displayName: 'Code formatting checks'

    - script: |
        cd repositories/ml-models
        python -m pytest tests/unit/ -v
      displayName: 'Run unit tests'
      
    - script: |
        cd repositories/ml-models
        python -m pip install safety bandit
        safety check --json --output safety-report.json || true
        bandit -r src/ -f json -o bandit-report.json || true
        python -m pip install pip-audit
        pip-audit --format=json --output=pip-audit-report.json || true
      displayName: 'Security vulnerability scan'

- stage: Train
  displayName: 'Train Models'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: TrainModel
    displayName: 'Train ML Model'
    timeoutInMinutes: 180
    cancelTimeoutInMinutes: 5
    steps:
    - script: |
        cd repositories/ml-models
        python src/training/train.py --config configs/model_config.yaml
      displayName: 'Train model'

    - script: |
        cd repositories/ml-models
        python src/evaluation/evaluate.py --model models/latest.pt
      displayName: 'Evaluate model'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'repositories/ml-models/models'
        ArtifactName: 'trained-models'
        publishLocation: 'Container'
        parallel: true
        retentionDays: 30
      displayName: 'Publish model artifacts'
      condition: succeededOrFailed()
      continueOnError: false